name: Every-Circle-Backend CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Clone Repository
        run: |
          git clone https://github.com/infinite-options/Every-Circle-Backend.git
          cd Every-Circle-Backend
          ls
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Dependencies
        run: |
          cd Every-Circle-Backend
          pip install torch==2.2.2+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html
          # pip3 install -r requirements.txt
          pip3 install -r requirements-part1.txt
          pip3 cache purge
          pip3 install -r requirements-part2.txt
          pip3 cache purge
          # Immediately downgrade numpy to avoid runtime crashes
          pip3 list
          pip3 install numpy==1.24.3
         

      - name: Run app to test
        id: test
        run: |
          cd Every-Circle-Backend
          python3 ec_api.py &
          sleep 10
          if ! pgrep -f "python3 ec_api.py"; then
            echo "App failed to start"
            exit 1
          fi
      
      - name: Deploy to EC2
        if: success()
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Debug: Check if environment variables are set
          echo "EC2_HOST: ${EC2_HOST}"
          echo "EC2_USER: ${EC2_USER}"
          echo "SSH key length: ${#EC2_SSH_KEY}"
          
          # Fail if any required variable is empty
          if [ -z "$EC2_HOST" ]; then
            echo "Error: EC2_HOST is not set"
            exit 1
          fi
          if [ -z "$EC2_USER" ]; then
            echo "Error: EC2_USER is not set"
            exit 1
          fi
          if [ -z "$EC2_SSH_KEY" ]; then
            echo "Error: EC2_SSH_KEY is not set"
            exit 1
          fi
          
          echo "${EC2_SSH_KEY}" > ssh_key.pem
          chmod 600 ssh_key.pem
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            echo "Connected to EC2 instance"
            cd /home/ec2-user/every-circle
            
            # Activate virtual environment
            source .venv/bin/activate
            cd Every-Circle-Backend
            
            # Pull latest code
            echo "Pulling latest code..."
            git pull origin master
            
            # Install dependencies in the correct order
            echo "Installing dependencies..."
            pip install torch==2.2.2+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html
            pip3 install -r requirements-part1.txt
            pip3 cache purge
            pip3 install -r requirements-part2.txt
            pip3 cache purge
            pip3 install numpy==1.24.3
            
            # Restart the application using supervisor (correct program name)
            echo "Restarting application..."
            sudo supervisorctl restart ec-api
            
            # Check status
            sudo supervisorctl status ec-api
            
            echo "Deployment completed"
            exit 0
          EOF

      - name: Health Check
        run: |
          sleep 10
          echo "Running health check..."
          curl -f http://${{ secrets.EC2_HOST }}/lists || exit 1
          echo "Health check passed - API is responding correctly"